
typedef enum
{
EC4A_LEVEL_MODE_MIN = 0
EC4A_LEVEL_MODE_GLOBAL,            
EC4A_LEVEL_MODE_GLOBAL_FLS,        
EC4A_LEVEL_MODE_FLS,               
EC4A_LEVEL_MODE_MAPPING,           
EC4A_LEVEL_MODE_SIMPLE_MAPPING,    
EC4A_LEVEL_MODE_MAX
} EC4A_LEVEL_MODE_ENUM
typedef enum
{
EC4A_CALC_ROUTE_OPT_MIN = 0
EC4A_CALC_ROUTE_OPT_CUSTOM,     
EC4A_CALC_ROUTE_OPT_STANDARD,   
EC4A_CALC_ROUTE_OPT_OPTIMIZE,   
EC4A_CALC_ROUTE_OPT_MAX
} EC4A_CALC_ROUTE_OPT_ENUM
typedef enum
{
EC4A_FIWA_REQ_MIN = 0
EC4A_FIWA_REQ_PRECISION_PREFERED,   
EC4A_FIWA_REQ_ROBUST_PREFERED,      
EC4A_FIWA_REQ_BALANCED,             
EC4A_FIWA_REQ_USER_DEFINE, 			
EC4A_FIWA_REQ_MAX
} EC4A_FINE_SUBSTRATE_ALIGN_REQ_ENUM
typedef enum
{
EC4A_WA_METHOD_MIN = 0
EC4A_WA_METHOD_GLOBAL,           
EC4A_WA_METHOD_HYBRID,           
EC4A_WA_METHOD_MAX
} EC4A_WA_METHOD_ENUM
typedef enum
{
EC4A_ALIGNMENT_PHASE_MIN = 0, 
EC4A_COARSE_AND_FINE_PHASE,   
EC4A_COARSE_PHASE,            
EC4A_FINE_PHASE,              
EC4A_ALIGNMENT_PHASE_MAX      /* 枚举最大值 */
} EC4A_ALIGNMENT_PHASE_ENUM
typedef enum
{
EC4A_AFBT_MIN = 0
EC4A_AFBT_ABORT_LOT, 
EC4A_AFBT_REJECT_WAFER,
EC4A_AFBT_MANUAL_ALIGN,
EC4A_AFBT_RETRY,
EC4A_AFBT_MAX
}EC4A_ALIGN_FAILE_LOT_TREAT_ENUM
typedef enum
{
EC4A_ST_STATUS_MIN = 0
EC4A_ST_STATUS_IDLE,            
EC4A_ST_STATUS_TERMINATE,       
EC4A_ST_STATUS_START_LOT,       
EC4A_ST_STATUS_START_SUBSTRATE, 
EC4A_ST_STATUS_MAX
} EC4A_ST_STATUS_ENUM
typedef enum
{
EC4A_OA_CCD_MIN = 0
EC4A_OA_CCD_FRONT,      
EC4A_OA_CCD_BACK,       
EC4A_OA_CCD_MAX
} EC4A_OA_CCD_ENUM
typedef enum
{
EC4A_FIELD_STATE_MIN = 0
EC4A_FIELD_NONE,   
EC4A_FIELD_EXPOSED,
EC4A_FIELD_FAILED, 
EC4A_FIELD_STATE_MAX
}EC4A_FIELD_STATE_ENUM
typedef enum
{
EC4A_IMAGE_STATE_MIN = 0
EC4A_IMAGE_NONE,   
EC4A_IMAGE_FULL,   
EC4A_IMAGE_FAILED, 
EC4A_IMAGE_STATE_MAX
}EC4A_IMAGE_STATE_ENUM
typedef enum
{
EC4A_FILTER_MODE_MIN = 0
EC4A_FILTER_MODE_GHI,    
EC4A_FILTER_MODE_GH,     
EC4A_FILTER_MODE_I,      
EC4A_FILTER_MODE_MAX
}EC4A_FILTER_MODE_ENUM
typedef enum
{
EC4A_DOSE_CONTROL_MODE_MIN = 0
EC4A_DOSE_CONTROL_BY_TIME,  
EC4A_DOSE_CONTROL_BY_ENERGY,
EC4A_DOSE_CONTROL_MODE_MAX
}EC4A_DOSE_CONTROL_MODE_ENUM
typedef enum
{
EC4A_FINE_WAFER_ALIGN_MODE_MIN = 0
EC4A_FINE_BASIC_MODE,  
EC4A_FINE_ENHANCE_MODE,
EC4A_FINE_WAFER_ALIGN_MODE_MAX
}EC4A_FINE_WAFER_ALIGN_MODE_ENUM
typedef enum
{
EC4A_MARK_PREF_MIN = 0
EC4A_MARK_PREF_PREFERED,            
EC4A_MARK_PREF_BACKUP,              
EC4A_MARK_PREF_MAX
} EC4A_MARK_PREF_ENUM
typedef enum
{
EC4A_CHCK_WS_CHUCK_PARTICLE_MIN = 0
EC4A_NO_CHECK,            
EC4A_CHECK,              
EC4A_FORCE_CHECK,        
EC4A_CHCK_WS_CHUCK_PARTICLE_MAX
} EC4A_CHECK_WS_CHUCK_PARTICLE_ENUM
typedef struct
{
EC4A_ST_STATUS_ENUM status
SMEE_INT32 filler1
} EC4A_STATUS_STRUCT
typedef struct
{
SMEE_BOOL do_auto_focus
SMEE_BOOL perform_vert_compensation
SMEE_DOUBLE vert_compensation
SMEE_BOOL specify_algorithm
SMEE_ALGORITHM_TYPE_ENUM algorithm_type
SMEE_BOOL use_align_alg_param
SMEE_INT32 filler
SMEE_CHAR align_alg_param_file_name[SMEE_MAX_FILE_NAME_SIZE]
SMEE_DOUBLE matching_rate
SMEE_CHAR template_file[EC4A_MAX_FILE_NAME_SIZE]
} EC4A_ALIGN_RECIPE_STRUCT
typedef struct
{
SMEE_INT32 mark_id
SMEE_INT32 zone_id
EC4A_ALIGNMENT_PHASE_ENUM   mark_align_usage
EC4A_MARK_PREF_ENUM preference
xy_vect mark_position
} EC4A_SUBSTRATE_MARK_DATA_STRUCT
typedef struct
{
xy_vect RM1
xy_vect RM2
}EC4A_RETICLE_MARK_DATA_STRUCT
typedef struct
{
xy_vect translation
SMEE_DOUBLE rotation
SMEE_DOUBLE magnification
SMEE_DOUBLE asy_rotation
SMEE_DOUBLE asy_magn
} EC4A_INTERFIELD_CORR_STRUCT
typedef struct
{
SMEE_ALIGN_TYPE_ENUM  WA_CCD_type
EC4A_OA_CCD_ENUM OA_CCD
SMEE_BOOL is_matching_overlay
SMEE_INT32 nr_of_valid_fWA_marks
EC4A_ALIGN_FAILE_LOT_TREAT_ENUM  align_fail_lot_treat
SMEE_BOOL is_force_mark_training
SMEE_BOOL is_do_manual_align
EC4A_FINE_SUBSTRATE_ALIGN_REQ_ENUM fWA_requirement
SMEE_INT32 nr_wafer_marks
SMEE_BOOL perform_precise_wafer_alignment
EC4A_FINE_WAFER_ALIGN_MODE_ENUM fine_wafer_alignment
SMEE_BOOL adjust_mvs_brightness
SMEE_DOUBLE mvs_brightness
EC4A_SUBSTRATE_MARK_DATA_STRUCT wafer_marks[MAX_WAFER_MARK_NUM]
EC4A_ALIGN_RECIPE_STRUCT coarse_mark_recipe
EC4A_ALIGN_RECIPE_STRUCT fine_mark_recipe
EC4A_INTERFIELD_CORR_STRUCT layer_correction
} EC4A_ALIGN_STRATEGY_STRUCT
typedef struct
{
SMEE_BOOL filter_enable
SMEE_BOOL ina_enable
SMEE_BOOL pna_enable
EC4A_FILTER_MODE_ENUM filter_mode
SMEE_DOUBLE ina_value
SMEE_DOUBLE pna_value
}EC4A_ILLUMINATION_MODE_STRUCT
typedef struct
{
SMEE_INT32 exposure_id
SMEE_INT32 zone_id
SMEE_DOUBLE dose
zrxry_vect focus_offset
xy_vect field_position
} EC4A_EXPOSURE_DATA_STRUCT
typedef struct
{
SMEE_INT32   nr_of_marks
SMEE_INT32   filler
SMEE_UINT32   mark_id[EC4A_MAX_ALIGN_MARK]
}EC4A_MARK_INDEX_STRUCT
typedef struct
{
SMEE_INT32 zone_id
SMEE_INT32 filler
xy_vect zone_center
xy_vect zone_size
EC4A_MARK_INDEX_STRUCT zone_marks
} EC4A_ZONE_ALIGN_STRUCT
typedef struct
{
SMEE_CHAR image_id[EC4A_IMAGE_ID_LEN]
SMEE_CHAR reticle_id[EC4A_MAX_RETICLE_ID]
xy_vect image_center
xy_vect image_size
xy_vect image_shift
SMEE_BOOL specify_mask_win
SMEE_INT32 filler
xy_vect win_size
xy_vect win_center
SMEE_DOUBLE reticle_trans_factor
xyrz_vect reticle_pre_align_offset
EC4A_RETICLE_MARK_DATA_STRUCT reticle_marks
EC4A_CALC_ROUTE_OPT_ENUM calc_option
EC4A_DOSE_CONTROL_MODE_ENUM dose_mode
SMEE_UINT32 nr_zones
SMEE_INT32 nr_of_exposures
EC4A_ZONE_ALIGN_STRUCT zones[EC4A_MAX_NR_ZONES]
EC4A_EXPOSURE_DATA_STRUCT exposure[EC4A_MAX_EXPOSURES_NR]
} EC4A_IMAGE_DATA_STRUCT
typedef struct
{
SMEE_INT32 lot_id
SMEE_BOOL alignment_optimize
SMEE_BOOL global_level_optimize
EC4A_CHECK_WS_CHUCK_PARTICLE_ENUM check_WS_chuck_particle
SMEE_DOUBLE global_lvl_base_angle
EC4A_ILLUMINATION_MODE_STRUCT ill_mode
SMEE_DOUBLE substrate_reflect_factor
xyrz_vect substrate_load_offset
SMEE_DOUBLE focus_edge_clearance;       
SMEE_DOUBLE substrate_thickness;        
SMEE_DOUBLE glc_UserFocusOffset
SMEE_BOOL perform_exposure;             
EC4A_WA_METHOD_ENUM substrate_align_method
SMEE_SUBSTRATE_SIZE_ENUM substrate_size
SMEE_BOOL is_CGC
SMEE_CHAR CGC_model[SMEE_MAX_FILE_NAME_SIZE]
EC4A_ALIGN_STRATEGY_STRUCT strategy
SMEE_DOUBLE wafer_TPV
SMEE_DOUBLE wafer_LPV
EC4A_LEVEL_MODE_ENUM level_mode
SMEE_INT32 nr_of_images
EC4A_IMAGE_DATA_STRUCT image[EC4A_MAX_IMAGES_NR]
} EC4A_LOT_DATA_STRUCT
typedef struct
{
xy_vect mark_pos
xyrzzrxry_vect exp_pos
SMEE_BOOL align_valid
SMEE_BOOL is_searched
xyrz_vect measure_pos
xy_vect wafer_aim_pos
xy_vect  mark_pos_in_CCD
xy_vect align_dev
SMEE_DOUBLE match_rate
}EC4A_MARK_MEASURE_RESULT_STRUCT
typedef struct
{
SMEE_INT32 nr_of_marks
SMEE_BOOL result_valid
EC4A_MARK_MEASURE_RESULT_STRUCT mark_data[EC4A_MAX_ALIGN_MARK]
}EC4A_MARK_CLUSTER_MEASURE_RESULT_STRUCT
typedef struct
{
SMEE_BOOL pos_valid
SMEE_INT32 filler
xy_vect mark_pos
xyrz_vect RS_exp_pos
xyrz_vect WS_exp_pos
xy_vect mark_in_CCD
xy_vect align_dev_in_WZCS
SMEE_DOUBLE match_rate
}EC4A_RET_DATA_STRUCT
typedef struct
{
EC4A_RET_DATA_STRUCT  reti_coarse_align_data[EC4A_RETICLE_MARKS_NUM]
EC4A_RET_DATA_STRUCT  reti_fine_align_data[EC4A_RETICLE_MARKS_NUM]
}EC4A_RETICLE_MEASURE_DATA_STRUCT
typedef struct
{
EC4A_MARK_CLUSTER_MEASURE_RESULT_STRUCT coarse_align_data
EC4A_MARK_CLUSTER_MEASURE_RESULT_STRUCT fine_align_data
}EC4A_SUBSTRATE_ALIGN_MEASURE_RESULT_STRUCT
typedef struct
{
SMEE_INT32 substrate_index
SMEE_BOOL is_mapping
SMEE_BOOL glc_result_validate
SMEE_BOOL mapping_validate
ADAE_timestamp level_point_stable
ADAE_timestamp global_level_end
ADAE_timestamp mapping_start
ADAE_timestamp mapping_end
zrxry_vect global_level_result
SMEE_DOUBLE current_TPV
SMEE_DOUBLE current_LPV
SMEE_BOOL find_bad_area
SMEE_BOOL valid_wafer
}EC4A_SUBSTRATE_LOG_STRUCT
typedef struct
{
xy_vect rcs_to_rscs_trans
SMEE_DOUBLE rcs_to_rscs_rot
SMEE_DOUBLE rcs_to_rscs_mag
} EC4A_COARSE_RETICLE_ALIGN_RESULT_STRUCT
typedef struct
{
xy_vect rcs_to_wzcs_trans
SMEE_DOUBLE rcs_to_wzcs_rot
SMEE_DOUBLE rcs_to_wzcs_mag
} EC4A_FINE_RETICLE_ALIGN_RESULT_STRUCT
typedef struct
{
xy_vect wcs_to_wscs_trans
SMEE_DOUBLE wcs_to_wscs_rot
SMEE_DOUBLE wcs_to_wscs_othro
SMEE_DOUBLE wcs_to_wscs_mag_x
SMEE_DOUBLE wcs_to_wscs_mag_y
SMEE_DOUBLE grid_coef_x[EC4A_NR_GRID_COEFS]
SMEE_DOUBLE grid_coef_y[EC4A_NR_GRID_COEFS]
} EC4A_ALIGN_MODEL_RESULT_STRUCT
typedef struct
{
SMEE_INT32 nr_zones
SMEE_INT32 filler
EC4A_ALIGN_MODEL_RESULT_STRUCT zone_align_results[EC4A_MAX_NR_ZONES]
} EC4A_ZONE_ALIGN_RESULT_STRUCT
typedef struct
{
SMEE_ALIGN_TYPE_ENUM align_type
xy_vect FM_pos
xy_vect ref_pos
xyrz_vect rs_exp_pos
xyrzzrxry_vect ws_exp_pos
xy_vect aim_pos
SMEE_DOUBLE match_rate
}EC4A_FM_DATA_STRUCT
typedef struct
{
EC4A_FM_DATA_STRUCT  ttl_FM_data
EC4A_FM_DATA_STRUCT  wfr_align_data[EC4A_MAX_UPDATE_BASELINE_NUM]
}EC4A_FM_MEASURE_DATA_STRUCT
typedef struct
{
SMEE_CHAR image_id[MAX_IMAGE_ID]; 
SMEE_INT32 nr_exposed_success;                      
SMEE_INT32 nr_exposed_failed
EC4A_IMAGE_STATE_ENUM image_state
SMEE_BOOL is_reject
SMEE_BOOL cora_model_validate
SMEE_BOOL fira_model_validate
SMEE_BOOL hapa_model_validate
SMEE_BOOL cowa_model_validate
SMEE_BOOL fiwa_model_validate
SMEE_INT32 is_retry
SMEE_DOUBLE rot_retry
EC4A_COARSE_RETICLE_ALIGN_RESULT_STRUCT CORA_result
EC4A_FINE_RETICLE_ALIGN_RESULT_STRUCT FIRA_result
EC4A_ALIGN_MODEL_RESULT_STRUCT COWA_result
EC4A_ZONE_ALIGN_RESULT_STRUCT FIWA_result
EC4A_SUBSTRATE_ALIGN_MEASURE_RESULT_STRUCT alignment_data
EC4A_RETICLE_MEASURE_DATA_STRUCT reticle_alignment_data
EC4A_FM_MEASURE_DATA_STRUCT fm_alignment_data
ADAE_timestamp image_begin
ADAE_timestamp wafer_coarse_alignment_begin_time
ADAE_timestamp wafer_coarse_alignment_end_time
ADAE_timestamp wafer_fine_alignment_begin_time
ADAE_timestamp wafer_fine_alignment_end_time
ADAE_timestamp reticle_coarse_align_start_time
ADAE_timestamp reticle_coarse_align_end_time
ADAE_timestamp reticle_fine_align_start_time
ADAE_timestamp reticle_fine_align_end_time
}EC4A_IMAGE_LOG_STRUCT
typedef struct
{
SMEE_CHAR image_id[MAX_IMAGE_ID]; 
SMEE_INT32 origin_index
EC4A_FIELD_STATE_ENUM field_state
xy_vect field_position
EC4A_DOSE_CONTROL_MODE_ENUM dose_mode
SMEE_INT32 field_index
xyrz_vect exp_ws_hor_pos; 
zrxry_vect exp_ws_ver_pos;
xyrz_vect act_ws_hor_pos; 
zrxry_vect act_ws_ver_pos;
SMEE_DOUBLE exp_dose
SMEE_DOUBLE real_exp_dose
SMEE_DOUBLE real_exp_time
ADAE_timestamp hor_move_begin
ADAE_timestamp hor_move_end
ADAE_timestamp vert_move_begin
ADAE_timestamp vert_move_end
ADAE_timestamp expose_begin
ADAE_timestamp expose_end
SMEE_BOOL bZinvalid
SMEE_BOOL bRXinvalid
SMEE_BOOL bRYinvalid
SMEE_BOOL filler1
zrxry_vect sfocus
} EC4A_FIELD_LOG_STRUCT
typedef struct
{
SMEE_CHAR image_id[EC4A_IMAGE_ID_LEN]
SMEE_INT32 expo_nr
SMEE_INT32 filler
xy_vect exp_center[MAX_FLD_NR_PER_IMG]
}EC4A_EXPO_INFO_STRUCT
typedef struct
{
SMEE_CHAR reticle_id[EC4A_MAX_RETICLE_ID]
SMEE_INT32 nr_of_images
SMEE_INT32 zfiller
EC4A_EXPO_INFO_STRUCT expo_info[EC4A_MAX_IMAGES_NR]
}EC4A_IMAGE_ROUTE_STRUCT
typedef struct
{
SMEE_CHAR message[EC4A_MAX_MSG_SIZE]
}EC4A_UI_MESSAGE_EVENT_STRUCT
typedef struct
{
EC4A_DOSE_CONTROL_MODE_ENUM dose_mode
SMEE_INT32 field_index
SMEE_DOUBLE dose
xy_vect field_position
zrxry_vect vert_position
} EC4A_EXPOSURE_BEGIN_STRUCT
typedef struct
{
xy_vect field_position
} EC4A_EXPOSURE_END_STRUCT
typedef struct
{
SMEE_BOOL update_loading_offset
SMEE_BOOL update_vert_compensation
SMEE_BOOL update_mvs_voltage
SMEE_INT32 filler
xyrz_vect loading_offset
SMEE_DOUBLE vert_compensation
SMEE_DOUBLE mvs_voltage
}EC4A_SAVE_ALIGNMENT_OFFSET_EVENT_STRUCT
typedef struct
{
SMEE_INT32 nr_marks
SMEE_INT32 filler
SMEE_DOUBLE coarse_matching_rate
SMEE_DOUBLE fine_matching_rate
EC4A_SUBSTRATE_MARK_DATA_STRUCT wafer_marks[MAX_WAFER_MARK_NUM]
}EC4A_WAFER_AILGN_BEGIN_STRUCT
