头文件名称为：EC4A_tc.h
#ifndef EC4A_TC_H
#define EC4A_TC_H
#define  EC4A_SYSTEM_ERROR          0x45430100
#define  EC4A_PARAMETER_ERROR       0x45430101
#define  EC4A_ILLEGAL_CALL_ERROR    0x45430102
#define  EC4A_RETRY_ERROR    0x45430103
#define EC4A_IMAGE_ID_LEN           MAX_IMAGE_ID
#define EC4A_MAX_IMAGES_NR          MAX_IMG_NR_PER_LOT
#define EC4A_MAX_EXPOSURES_NR       MAX_FLD_NR_PER_IMG
#define EC4A_MAX_RETICLE_ID         MAX_RETICLE_ID
#define EC4A_MAX_FILE_NAME_SIZE     0x80
#define EC4A_MAX_ALIGN_MARK         MAX_WAFER_MARK_NUM
#define EC4A_MAX_NR_ZONES           9
#define EC4A_MAX_MARK_NR_PER_ZONE     12
#define EC4A_MAX_EXPOSURE_NR_PER_ZONE     12
#define EC4A_NR_GRID_COEFS          10
#define EC4A_MAX_MSG_SIZE  0x200
#define EC4A_RETICLE_MARKS_NUM 2
#define EC4A_MAX_UPDATE_BASELINE_NUM 3
头文件名称为：ADAE.h
#ifndef __ADAE_H__
#define __ADAE_H__
typedef		SMEE_INT32              ADAE_INT32
typedef		SMEE_INT64              ADAE_INT64
typedef		SMEE_FLOAT              ADAE_DOUBLE32
typedef		SMEE_DOUBLE             ADAE_DOUBLE64
typedef		SMEE_UINT16             ADAE_UINT16
typedef		SMEE_UINT32             ADAE_UINT32
typedef		SMEE_UINT8              ADAE_BYTE
typedef		SMEE_LPVOID             ADAE_PVOID
typedef		SMEE_UINT32             ADAE_SIZE
typedef		SMEE_INT32              ADAE_KEY
typedef		SMEE_INT32              ADAE_GID
typedef		SMEE_INT32              ADAE_MODE
typedef		unsigned long           ADAE_ULONG32
typedef		char*                   ADAE_STRING
typedef		long                    ADAE_LONG
typedef		ADAE_LONG               ADAE_OFF
typedef		ADAE_LONG               ADAE_TIME_T
#if     TARGET_OS == WIN_OS
typedef ADAE_ULONG32           ADAE_TIMER_ID
typedef ADAE_PVOID             ADAE_HANDLE
typedef ADAE_HANDLE            ADAE_TID
typedef ADAE_INT32             ADAE_FD
typedef ADAE_UINT32            ADAE_SOCKET
typedef ADAE_ULONG32           ADAE_PID
typedef ADAE_HANDLE            ADAE_SEM_ID
#elif   TARGET_OS == SUN_OS
typedef ADAE_INT32             ADAE_TIMER_ID
typedef ADAE_UINT32            ADAE_TID
typedef ADAE_INT32             ADAE_HANDLE
typedef ADAE_INT32             ADAE_FD
typedef ADAE_INT32             ADAE_SOCKET
typedef ADAE_INT32             ADAE_PID
typedef ADAE_INT32             ADAE_SEM_ID
#elif   TARGET_OS == VXWORKS_OS
typedef ADAE_PVOID             ADAE_TIMER_ID
typedef ADAE_UINT32            ADAE_TID
typedef ADAE_INT32             ADAE_HANDLE
typedef ADAE_INT32             ADAE_FD
typedef ADAE_INT32             ADAE_SOCKET
typedef ADAE_INT32             ADAE_PID
typedef ADAE_PVOID             ADAE_SEM_ID
#elif   TARGET_OS == LINUX_OS
typedef ADAE_PVOID             ADAE_TIMER_ID
typedef ADAE_ULONG32           ADAE_TID
typedef ADAE_INT32             ADAE_HANDLE
typedef ADAE_INT32             ADAE_FD
typedef ADAE_INT32             ADAE_SOCKET
typedef ADAE_INT32             ADAE_PID
typedef ADAE_INT32             ADAE_SEM_ID
#if     TARGET_OS == WIN_OS
#define ADAE_INVALID_PID        (NULL)
#define ADAE_INVALID_SEM_ID     (ADAE_SEM_ID)(0)
#define ADAE_INVALID_SHM_ID     (NULL)
#define ADAE_INVALLD_TID        (NULL)
#define ADAE_INVALID_SOCKET     (ADAE_UINT32)(~0)
#define ADAE_INVALID_TIMER_ID   (ADAE_UINT32)(~0)       
#define ADAE_INVALID_FD         (NULL)
#define ADAE_MAX_FILENAME_SIZE  (256)
#elif   TARGET_OS == SUN_OS
#define ADAE_INVALID_PID        (-1)
#define ADAE_INVALID_SEM_ID     (-1)
#define ADAE_INVALID_SHM_ID     (-1)
#define ADAE_INVALLD_TID        (ADAE_UINT32)(~0)
#define ADAE_INVALID_SOCKET     (int)(-1)
#define ADAE_INVALID_TIMER_ID   (-1)
#define ADAE_INVALID_FD         (-1)
#elif	TARGET_OS == VXWORKS_OS
#define ADAE_INVALID_PID        (-1)
#define ADAE_INVALID_SEM_ID     (ADAE_SEM_ID)(0)
#define ADAE_INVALID_SHM_ID     (-1)
#define ADAE_INVALLD_TID        (ADAE_UINT32)(~0)
#define ADAE_INVALID_SOCKET     (int)(-1)
#define ADAE_INVALID_TIMER_ID   (NULL)
#define ADAE_INVALID_FD         (-1)
#elif	TARGET_OS == LINUX_OS
#define ADAE_INVALID_PID        (-1)
#define ADAE_INVALID_SEM_ID     (-1)
#define ADAE_INVALID_SHM_ID     (-1)
#define ADAE_INVALLD_TID        (ADAE_UINT32)(~0)
#define ADAE_INVALID_SOCKET     (int)(-1)
#define ADAE_INVALID_TIMER_ID   (NULL)
#define ADAE_INVALID_FD         (-1)
typedef ADAE_TIME_VALUE ADAE_timestamp
#define ADAE_RD				(0x00)
#define ADAE_WR				(0x01)
#define ADAE_RDWR			(0x02)
#define ADAE_CREATE			(0x100)
#define ADAE_APPEND			(0x08)
#define ADAE_R_OK			(04)
#define ADAE_W_OK			(02)
#define ADAE_X_OK			(01)
#define ADAE_F_OK			(00)
SMEE_EXPORT void ADAE_debug(const char* format_msg,...)
SMEE_EXPORT void ADAE_logging(int iErcode
const char* format_msg,...)
头文件名称为：smee.h
#ifndef SMEE_H_
#define SMEE_H_
#ifndef IN
#define IN
#ifndef OUT
#define OUT
#ifndef INOUT
#define INOUT
#ifndef OK
#define OK              0
#ifndef NULL
#define NULL        0
#if TARGET_OS == SUN32_OS || TARGET_OS == VXWORKS32_OS || TARGET_OS == SUN64_OS || TARGET_OS == VXWORKS64_OS || TARGET_OS == LINUX32_OS || TARGET_OS == LINUX64_OS
#ifdef __cplusplus
#define __SMEE_FUNC__  (char*)__PRETTY_FUNCTION__
#else
#define __SMEE_FUNC__  (char*)__func__
#elif TARGET_OS == WIN32_OS || TARGET_OS == WIN64_OS
#define __SMEE_FUNC__  __FUNCTION__
#if TARGET_OS == SUN32_OS || TARGET_OS == VXWORKS32_OS || TARGET_OS == SUN64_OS || TARGET_OS == VXWORKS64_OS || TARGET_OS == LINUX32_OS || TARGET_OS == LINUX64_OS
#ifdef  __cplusplus
#define SMEE_EXPORT extern "C"
#else
#define SMEE_EXPORT extern
#define SMEE_VAR_EXPORT
#elif TARGET_OS == WIN32_OS || TARGET_OS == WIN64_OS
#ifdef __cplusplus
#define SMEE_EXPORT extern "C" __declspec ( dllexport )
#define SMEE_IMPORT extern "C" __declspec ( dllimport )
#else
#define SMEE_EXPORT extern __declspec ( dllexport )
#define SMEE_IMPORT extern __declspec ( dllimport )
#define SMEE_VAR_EXPORT __declspec ( dllexport )
头文件名称为：smee_station.h
#ifndef SMEE_STATION_H_
#define SMEE_STATION_H_
#define SMEE_SPARCB     0
#define SMEE_PPC        1
#define SMEE_X86_32     2
#define SMEE_SPARCB_64  3
#define SMEE_PPC_64     4
#define SMEE_X86_64     5
#define SMEE_SPARCB_32  SMEE_SPARCB
#define SMEE_PPC_32     SMEE_PPC
#ifndef TARGET_MACHINE
#define TARGET_MACHINE  SMEE_SPARCB_32
#define SUN32_OS        0
#define VXWORKS32_OS    1
#define WIN32_OS        2
#define SUN64_OS        3
#define VXWORKS64_OS    4
#define WIN64_OS        5
#define LINUX32_OS      6
#define LINUX64_OS      7
#ifndef COMPILE_OS
#define COMPILE_OS SUN32_OS
#if TARGET_MACHINE == SMEE_PPC && COMPILE_OS != VXWORKS32_OS
#error "TARGET_MACHINE(SMEE_PPC) must match COMPILE_OS(VXWORKS32_OS)."
#elif TARGET_MACHINE == SMEE_PPC_64 && (COMPILE_OS != VXWORKS32_OS || COMPILE_OS != VXWORKS64_OS)
#error "TARGET_MACHINE(SMEE_PPC_64) must match COMPILE_OS(VXWORKS32_OS or VXWORKS64_OS)."
#elif TARGET_MACHINE == SMEE_SPARCB && COMPILE_OS != SUN32_OS
#error "TARGET_MACHINE(SMEE_SPARCB) must match COMPILE_OS(SUN32_OS)."
#elif TARGET_MACHINE == SMEE_SPARCB_64 && (COMPILE_OS != SUN32_OS || COMPILE_OS != SUN64_OS)
#error "The TARGET_MACHINE(SMEE_SPARCB_64) must match COMPILE_OS(SUN32_OS or SUN64_OS)."
#define  SUN_OS         0
#define  VXWORKS_OS     1
#define  WIN_OS         2
#define  LINUX_OS       3
#if COMPILE_OS == SUN32_OS || COMPILE_OS == SUN64_OS
#define TARGET_OS SUN_OS
#elif COMPILE_OS == VXWORKS32_OS || COMPILE_OS == VXWORKS64_OS
#define TARGET_OS VXWORKS_OS
#elif COMPILE_OS == WIN32_OS || COMPILE_OS == WIN64_OS
#define TARGET_OS WIN_OS
#elif COMPILE_OS == LINUX32_OS || COMPILE_OS == LINUX64_OS
#define TARGET_OS LINUX_OS
#if TARGET_MACHINE == SMEE_SPARCB_32 || TARGET_MACHINE == SMEE_PPC_32 || TARGET_MACHINE == SMEE_SPARCB_64 || TARGET_MACHINE == SMEE_PPC_64
#define SMEE_BIG_ENDIAN
#elif TARGET_MACHINE == SMEE_X86_32 ||  TARGET_MACHINE == SMEE_X86_64
#define SMEE_LITTLE_ENDIAN
#define MASTER_MACHINE  1
#define SLAVE_MACHINE   0
#ifndef HOST_MACHINE
头文件名称为：smee_type.h
#ifndef SMEE_TYPE_H_
#define SMEE_TYPE_H_
#define SMEE_LONG_MIN   (-2147483647L-1L)
#define SMEE_LLONG_MIN  (-9223372036854775807LL-1LL)
#define SMEE_LLONG_MAX  9223372036854775807LL
#define SMEE_ULLONG_MAX 18446744073709551615ULL
#define SMEE_INT8_MAX (127)
#define SMEE_INT16_MAX (32767)
#define SMEE_INT32_MAX (2147483647)
#define SMEE_INT64_MAX (9223372036854775807LL)
#define SMEE_INT8_MIN (-128)
#define SMEE_INT16_MIN (-32767-1)
#define SMEE_INT32_MIN (-2147483647-1)
#define SMEE_INT64_MIN (-9223372036854775807LL-1)
#define SMEE_UINT8_MAX (255U)
#define SMEE_UINT16_MAX (65535U)
#define SMEE_UINT32_MAX (4294967295U)
#define SMEE_UINT64_MAX (18446744073709551615ULL)
#define  SMEE_SIZEOF_CHAR               1
#define  SMEE_SIZEOF_SHORT              2
#define  SMEE_SIZEOF_INT                4
#define  SMEE_SIZEOF_LLONG              8
#define  SMEE_SIZEOF_DOUBLE             8
#if TARGET_OS == SUN32_OS || TARGET_OS == VXWORKS32_OS
#define  SMEE_SIZEOF_LONG               4
#define  SMEE_SIZEOF_VOID_P             4
#elif TARGET_OS == SUN64_OS || TARGET_OS == VXWORKS64_OS
#define  SMEE_SIZEOF_LONG               8
#define  SMEE_SIZEOF_VOID_P             8
#if TARGET_MACHINE == SMEE_SPARCB_32 || TARGET_MACHINE == SMEE_SPARCB_64
#define  SMEE_SIZEOF_LONG_DOUBLE        16
#elif TARGET_MACHINE == SMEE_X86_32 || TARGET_MACHINE == SMEE_X86_64
#define  SMEE_SIZEOF_LONG_DOUBLE        12
typedef char                        SMEE_CHAR
typedef char                        SMEE_INT8
typedef unsigned char               SMEE_UINT8
typedef short                       SMEE_INT16
typedef unsigned short              SMEE_UINT16
typedef int                         SMEE_INT32
typedef unsigned int                SMEE_UINT32
typedef long long                   SMEE_INT64
typedef unsigned long long          SMEE_UINT64
typedef float                       SMEE_FLOAT
typedef double                      SMEE_DOUBLE
typedef long double                 SMEE_LDOUBLE
typedef unsigned long               SMEE_ULONG32
typedef char*                       SMEE_STRING
typedef long                        SMEE_LONG
typedef void                        *SMEE_LPVOID
typedef SMEE_UINT8                  SMEE_BYTE
typedef SMEE_UINT32                 SMEE_SIZE
typedef SMEE_INT32                  SMEE_KEY
typedef SMEE_INT32                  SMEE_GID
typedef SMEE_INT32                  SMEE_MODE
typedef SMEE_LONG                   SMEE_OFF
typedef SMEE_LONG                   SMEE_TIME_T
typedef SMEE_INT32 SMEE_BOOL
#define SMEE_TRUE 1
#define SMEE_FALSE 0
#if TARGET_OS==WIN_OS
typedef SMEE_ULONG32    SMEE_TIMER_ID
typedef SMEE_LPVOID     SMEE_HANDLE
typedef SMEE_HANDLE     SMEE_TID
typedef SMEE_HANDLE     SMEE_FD
typedef SMEE_UINT32     SMEE_SOCKET
typedef SMEE_HANDLE     SMEE_PID
typedef SMEE_HANDLE     SMEE_SEM_ID
typedef SMEE_INT32      SMEE_DWORD
#elif   TARGET_OS==SUN_OS || TARGET_OS == LINUX_OS
typedef SMEE_INT32      SMEE_TIMER_ID
typedef SMEE_UINT32     SMEE_TID
typedef SMEE_INT32      SMEE_HANDLE
typedef SMEE_INT32      SMEE_FD
typedef SMEE_INT32      SMEE_SOCKET
typedef SMEE_INT32      SMEE_PID
typedef SMEE_INT32      SMEE_SEM_ID
typedef SMEE_INT32      SMEE_DWORD
#elif   TARGET_OS==VXWORKS_OS
typedef SMEE_LPVOID     SMEE_TIMER_ID
typedef SMEE_UINT32     SMEE_TID
typedef SMEE_INT32      SMEE_HANDLE
typedef SMEE_INT32      SMEE_FD
typedef SMEE_INT32      SMEE_SOCKET
typedef SMEE_INT32      SMEE_PID
typedef SMEE_LPVOID     SMEE_SEM_ID
typedef SMEE_INT32      SMEE_DWORD
#if TARGET_OS==WIN_OS
#define SMEE_INVALID_PID        NULL
#define SMEE_INVALID_SEM_ID     (SMEE_SEM_ID)0
#define SMEE_INVALID_SHM_ID     NULL
#define SMEE_INVALLD_TID        NULL
#define SMEE_INVALID_SOCKET     SMEE_UINT32(~0)
#define SMEE_INVALID_TIMER_ID   (SMEE_INT32)(-1)
#define SMEE_INVALID_FD         NULL
#define SMEE_INVALID_HANDLE_VALUE (SMEE_INT32)(-1)
#elif TARGET_OS==SUN_OS || TARGET_OS == LINUX_OS
#define SMEE_INVALID_PID        (SMEE_INT32)(-1)
#define SMEE_INVALID_SEM_ID     (SMEE_INT32)(-1)
#define SMEE_INVALID_SHM_ID     (SMEE_INT32)(-1)
#define SMEE_INVALLD_TID        SMEE_UINT32(~0)
#define SMEE_INVALID_SOCKET     (SMEE_INT32)(-1)
#define SMEE_INVALID_TIMER_ID   (SMEE_INT32)(-1)
#define SMEE_INVALID_FD         (SMEE_INT32)(-1)
#define SMEE_INVALID_HANDLE_VALUE (SMEE_INT32)(-1)
#elif TARGET_OS==VXWORKS_OS
#define SMEE_INVALID_PID        (SMEE_INT32)(-1)
#define SMEE_INVALID_SEM_ID     (SMEE_SEM_ID)0
#define SMEE_INVALID_SHM_ID     (SMEE_INT32)(-1)
#define SMEE_INVALLD_TID        SMEE_UINT32(~0)
#define SMEE_INVALID_SOCKET     (SMEE_INT32)(-1)
#define SMEE_INVALID_TIMER_ID   NULL
#define SMEE_INVALID_FD         (SMEE_INT32)(-1)
#define SMEE_INVALID_HANDLE_VALUE (SMEE_INT32)(-1)
#define SMEE_SOCKET_ERROR ((SMEE_INT32)-1)
#define SMEE_WAIT_FOREVER ((SMEE_INT32)-1)
#define SMEE_MAX_FILE_NAME_SIZE    0x80
头文件名称为：SM4A_tc.h
#ifndef _SM4A_TC_H
#define _SM4A_TC_H
#define SM4A_CONST_BASE					0x534D0000
#define SM4A_DRIVER_END					"End_drv"
#define SM4A_ALL_DRIVERS				"All_drv"
typedef char SM4A_DRIVER_NAME[SM4A_DRIVER_NAME_LENGTH+1]
头文件名称为：TR4A_tc.h
#ifndef		__TR4A_TC_H__
#define		__TR4A_TC_H__
头文件名称为：EC4T_tc.h
#ifndef EC4T_TC_H
#define EC4T_TC_H
#define EC4T_MAX_NR_SUBSTRATE_MARKS     50
#define EC4A_MAPPING_SCAN_NUM               40
头文件名称为：EC4A_tc.h
#ifndef EC4A_TC_H
#define EC4A_TC_H
#define  EC4A_SYSTEM_ERROR          0x45430100
#define  EC4A_PARAMETER_ERROR       0x45430101
#define  EC4A_ILLEGAL_CALL_ERROR    0x45430102
#define  EC4A_RETRY_ERROR    0x45430103
#define EC4A_IMAGE_ID_LEN           MAX_IMAGE_ID
#define EC4A_MAX_IMAGES_NR          MAX_IMG_NR_PER_LOT
#define EC4A_MAX_EXPOSURES_NR       MAX_FLD_NR_PER_IMG
#define EC4A_MAX_RETICLE_ID         MAX_RETICLE_ID
#define EC4A_MAX_FILE_NAME_SIZE     0x80
#define EC4A_MAX_ALIGN_MARK         MAX_WAFER_MARK_NUM
#define EC4A_MAX_NR_ZONES           9
#define EC4A_MAX_MARK_NR_PER_ZONE     12
#define EC4A_MAX_EXPOSURE_NR_PER_ZONE     12
#define EC4A_NR_GRID_COEFS          10
#define EC4A_MAX_MSG_SIZE  0x200
#define EC4A_RETICLE_MARKS_NUM 2
#define EC4A_MAX_UPDATE_BASELINE_NUM 3
头文件名称为：ADAE.h
#ifndef __ADAE_H__
#define __ADAE_H__
typedef		SMEE_INT32              ADAE_INT32
typedef		SMEE_INT64              ADAE_INT64
typedef		SMEE_FLOAT              ADAE_DOUBLE32
typedef		SMEE_DOUBLE             ADAE_DOUBLE64
typedef		SMEE_UINT16             ADAE_UINT16
typedef		SMEE_UINT32             ADAE_UINT32
typedef		SMEE_UINT8              ADAE_BYTE
typedef		SMEE_LPVOID             ADAE_PVOID
typedef		SMEE_UINT32             ADAE_SIZE
typedef		SMEE_INT32              ADAE_KEY
typedef		SMEE_INT32              ADAE_GID
typedef		SMEE_INT32              ADAE_MODE
typedef		unsigned long           ADAE_ULONG32
typedef		char*                   ADAE_STRING
typedef		long                    ADAE_LONG
typedef		ADAE_LONG               ADAE_OFF
typedef		ADAE_LONG               ADAE_TIME_T
#if     TARGET_OS == WIN_OS
typedef ADAE_ULONG32           ADAE_TIMER_ID
typedef ADAE_PVOID             ADAE_HANDLE
typedef ADAE_HANDLE            ADAE_TID
typedef ADAE_INT32             ADAE_FD
typedef ADAE_UINT32            ADAE_SOCKET
typedef ADAE_ULONG32           ADAE_PID
typedef ADAE_HANDLE            ADAE_SEM_ID
#elif   TARGET_OS == SUN_OS
typedef ADAE_INT32             ADAE_TIMER_ID
typedef ADAE_UINT32            ADAE_TID
typedef ADAE_INT32             ADAE_HANDLE
typedef ADAE_INT32             ADAE_FD
typedef ADAE_INT32             ADAE_SOCKET
typedef ADAE_INT32             ADAE_PID
typedef ADAE_INT32             ADAE_SEM_ID
#elif   TARGET_OS == VXWORKS_OS
typedef ADAE_PVOID             ADAE_TIMER_ID
typedef ADAE_UINT32            ADAE_TID
typedef ADAE_INT32             ADAE_HANDLE
typedef ADAE_INT32             ADAE_FD
typedef ADAE_INT32             ADAE_SOCKET
typedef ADAE_INT32             ADAE_PID
typedef ADAE_PVOID             ADAE_SEM_ID
#elif   TARGET_OS == LINUX_OS
typedef ADAE_PVOID             ADAE_TIMER_ID
typedef ADAE_ULONG32           ADAE_TID
typedef ADAE_INT32             ADAE_HANDLE
typedef ADAE_INT32             ADAE_FD
typedef ADAE_INT32             ADAE_SOCKET
typedef ADAE_INT32             ADAE_PID
typedef ADAE_INT32             ADAE_SEM_ID
#if     TARGET_OS == WIN_OS
#define ADAE_INVALID_PID        (NULL)
#define ADAE_INVALID_SEM_ID     (ADAE_SEM_ID)(0)
#define ADAE_INVALID_SHM_ID     (NULL)
#define ADAE_INVALLD_TID        (NULL)
#define ADAE_INVALID_SOCKET     (ADAE_UINT32)(~0)
#define ADAE_INVALID_TIMER_ID   (ADAE_UINT32)(~0)       
#define ADAE_INVALID_FD         (NULL)
#define ADAE_MAX_FILENAME_SIZE  (256)
#elif   TARGET_OS == SUN_OS
#define ADAE_INVALID_PID        (-1)
#define ADAE_INVALID_SEM_ID     (-1)
#define ADAE_INVALID_SHM_ID     (-1)
#define ADAE_INVALLD_TID        (ADAE_UINT32)(~0)
#define ADAE_INVALID_SOCKET     (int)(-1)
#define ADAE_INVALID_TIMER_ID   (-1)
#define ADAE_INVALID_FD         (-1)
#elif	TARGET_OS == VXWORKS_OS
#define ADAE_INVALID_PID        (-1)
#define ADAE_INVALID_SEM_ID     (ADAE_SEM_ID)(0)
#define ADAE_INVALID_SHM_ID     (-1)
#define ADAE_INVALLD_TID        (ADAE_UINT32)(~0)
#define ADAE_INVALID_SOCKET     (int)(-1)
#define ADAE_INVALID_TIMER_ID   (NULL)
#define ADAE_INVALID_FD         (-1)
#elif	TARGET_OS == LINUX_OS
#define ADAE_INVALID_PID        (-1)
#define ADAE_INVALID_SEM_ID     (-1)
#define ADAE_INVALID_SHM_ID     (-1)
#define ADAE_INVALLD_TID        (ADAE_UINT32)(~0)
#define ADAE_INVALID_SOCKET     (int)(-1)
#define ADAE_INVALID_TIMER_ID   (NULL)
#define ADAE_INVALID_FD         (-1)
typedef ADAE_TIME_VALUE ADAE_timestamp
#define ADAE_RD				(0x00)
#define ADAE_WR				(0x01)
#define ADAE_RDWR			(0x02)
#define ADAE_CREATE			(0x100)
#define ADAE_APPEND			(0x08)
#define ADAE_R_OK			(04)
#define ADAE_W_OK			(02)
#define ADAE_X_OK			(01)
#define ADAE_F_OK			(00)
SMEE_EXPORT void ADAE_debug(const char* format_msg,...)
SMEE_EXPORT void ADAE_logging(int iErcode
const char* format_msg,...)
头文件名称为：smee.h
#ifndef SMEE_H_
#define SMEE_H_
#ifndef IN
#define IN
#ifndef OUT
#define OUT
#ifndef INOUT
#define INOUT
#ifndef OK
#define OK              0
#ifndef NULL
#define NULL        0
#if TARGET_OS == SUN32_OS || TARGET_OS == VXWORKS32_OS || TARGET_OS == SUN64_OS || TARGET_OS == VXWORKS64_OS || TARGET_OS == LINUX32_OS || TARGET_OS == LINUX64_OS
#ifdef __cplusplus
#define __SMEE_FUNC__  (char*)__PRETTY_FUNCTION__
#else
#define __SMEE_FUNC__  (char*)__func__
#elif TARGET_OS == WIN32_OS || TARGET_OS == WIN64_OS
#define __SMEE_FUNC__  __FUNCTION__
#if TARGET_OS == SUN32_OS || TARGET_OS == VXWORKS32_OS || TARGET_OS == SUN64_OS || TARGET_OS == VXWORKS64_OS || TARGET_OS == LINUX32_OS || TARGET_OS == LINUX64_OS
#ifdef  __cplusplus
#define SMEE_EXPORT extern "C"
#else
#define SMEE_EXPORT extern
#define SMEE_VAR_EXPORT
#elif TARGET_OS == WIN32_OS || TARGET_OS == WIN64_OS
#ifdef __cplusplus
#define SMEE_EXPORT extern "C" __declspec ( dllexport )
#define SMEE_IMPORT extern "C" __declspec ( dllimport )
#else
#define SMEE_EXPORT extern __declspec ( dllexport )
#define SMEE_IMPORT extern __declspec ( dllimport )
#define SMEE_VAR_EXPORT __declspec ( dllexport )
头文件名称为：smee_station.h
#ifndef SMEE_STATION_H_
#define SMEE_STATION_H_
#define SMEE_SPARCB     0
#define SMEE_PPC        1
#define SMEE_X86_32     2
#define SMEE_SPARCB_64  3
#define SMEE_PPC_64     4
#define SMEE_X86_64     5
#define SMEE_SPARCB_32  SMEE_SPARCB
#define SMEE_PPC_32     SMEE_PPC
#ifndef TARGET_MACHINE
#define TARGET_MACHINE  SMEE_SPARCB_32
#define SUN32_OS        0
#define VXWORKS32_OS    1
#define WIN32_OS        2
#define SUN64_OS        3
#define VXWORKS64_OS    4
#define WIN64_OS        5
#define LINUX32_OS      6
#define LINUX64_OS      7
#ifndef COMPILE_OS
#define COMPILE_OS SUN32_OS
#if TARGET_MACHINE == SMEE_PPC && COMPILE_OS != VXWORKS32_OS
#error "TARGET_MACHINE(SMEE_PPC) must match COMPILE_OS(VXWORKS32_OS)."
#elif TARGET_MACHINE == SMEE_PPC_64 && (COMPILE_OS != VXWORKS32_OS || COMPILE_OS != VXWORKS64_OS)
#error "TARGET_MACHINE(SMEE_PPC_64) must match COMPILE_OS(VXWORKS32_OS or VXWORKS64_OS)."
#elif TARGET_MACHINE == SMEE_SPARCB && COMPILE_OS != SUN32_OS
#error "TARGET_MACHINE(SMEE_SPARCB) must match COMPILE_OS(SUN32_OS)."
#elif TARGET_MACHINE == SMEE_SPARCB_64 && (COMPILE_OS != SUN32_OS || COMPILE_OS != SUN64_OS)
#error "The TARGET_MACHINE(SMEE_SPARCB_64) must match COMPILE_OS(SUN32_OS or SUN64_OS)."
#define  SUN_OS         0
#define  VXWORKS_OS     1
#define  WIN_OS         2
#define  LINUX_OS       3
#if COMPILE_OS == SUN32_OS || COMPILE_OS == SUN64_OS
#define TARGET_OS SUN_OS
#elif COMPILE_OS == VXWORKS32_OS || COMPILE_OS == VXWORKS64_OS
#define TARGET_OS VXWORKS_OS
#elif COMPILE_OS == WIN32_OS || COMPILE_OS == WIN64_OS
#define TARGET_OS WIN_OS
#elif COMPILE_OS == LINUX32_OS || COMPILE_OS == LINUX64_OS
#define TARGET_OS LINUX_OS
#if TARGET_MACHINE == SMEE_SPARCB_32 || TARGET_MACHINE == SMEE_PPC_32 || TARGET_MACHINE == SMEE_SPARCB_64 || TARGET_MACHINE == SMEE_PPC_64
#define SMEE_BIG_ENDIAN
#elif TARGET_MACHINE == SMEE_X86_32 ||  TARGET_MACHINE == SMEE_X86_64
#define SMEE_LITTLE_ENDIAN
#define MASTER_MACHINE  1
#define SLAVE_MACHINE   0
#ifndef HOST_MACHINE
头文件名称为：smee_type.h
#ifndef SMEE_TYPE_H_
#define SMEE_TYPE_H_
#define SMEE_LONG_MIN   (-2147483647L-1L)
#define SMEE_LLONG_MIN  (-9223372036854775807LL-1LL)
#define SMEE_LLONG_MAX  9223372036854775807LL
#define SMEE_ULLONG_MAX 18446744073709551615ULL
#define SMEE_INT8_MAX (127)
#define SMEE_INT16_MAX (32767)
#define SMEE_INT32_MAX (2147483647)
#define SMEE_INT64_MAX (9223372036854775807LL)
#define SMEE_INT8_MIN (-128)
#define SMEE_INT16_MIN (-32767-1)
#define SMEE_INT32_MIN (-2147483647-1)
#define SMEE_INT64_MIN (-9223372036854775807LL-1)
#define SMEE_UINT8_MAX (255U)
#define SMEE_UINT16_MAX (65535U)
#define SMEE_UINT32_MAX (4294967295U)
#define SMEE_UINT64_MAX (18446744073709551615ULL)
#define  SMEE_SIZEOF_CHAR               1
#define  SMEE_SIZEOF_SHORT              2
#define  SMEE_SIZEOF_INT                4
#define  SMEE_SIZEOF_LLONG              8
#define  SMEE_SIZEOF_DOUBLE             8
#if TARGET_OS == SUN32_OS || TARGET_OS == VXWORKS32_OS
#define  SMEE_SIZEOF_LONG               4
#define  SMEE_SIZEOF_VOID_P             4
#elif TARGET_OS == SUN64_OS || TARGET_OS == VXWORKS64_OS
#define  SMEE_SIZEOF_LONG               8
#define  SMEE_SIZEOF_VOID_P             8
#if TARGET_MACHINE == SMEE_SPARCB_32 || TARGET_MACHINE == SMEE_SPARCB_64
#define  SMEE_SIZEOF_LONG_DOUBLE        16
#elif TARGET_MACHINE == SMEE_X86_32 || TARGET_MACHINE == SMEE_X86_64
#define  SMEE_SIZEOF_LONG_DOUBLE        12
typedef char                        SMEE_CHAR
typedef char                        SMEE_INT8
typedef unsigned char               SMEE_UINT8
typedef short                       SMEE_INT16
typedef unsigned short              SMEE_UINT16
typedef int                         SMEE_INT32
typedef unsigned int                SMEE_UINT32
typedef long long                   SMEE_INT64
typedef unsigned long long          SMEE_UINT64
typedef float                       SMEE_FLOAT
typedef double                      SMEE_DOUBLE
typedef long double                 SMEE_LDOUBLE
typedef unsigned long               SMEE_ULONG32
typedef char*                       SMEE_STRING
typedef long                        SMEE_LONG
typedef void                        *SMEE_LPVOID
typedef SMEE_UINT8                  SMEE_BYTE
typedef SMEE_UINT32                 SMEE_SIZE
typedef SMEE_INT32                  SMEE_KEY
typedef SMEE_INT32                  SMEE_GID
typedef SMEE_INT32                  SMEE_MODE
typedef SMEE_LONG                   SMEE_OFF
typedef SMEE_LONG                   SMEE_TIME_T
typedef SMEE_INT32 SMEE_BOOL
#define SMEE_TRUE 1
#define SMEE_FALSE 0
#if TARGET_OS==WIN_OS
typedef SMEE_ULONG32    SMEE_TIMER_ID
typedef SMEE_LPVOID     SMEE_HANDLE
typedef SMEE_HANDLE     SMEE_TID
typedef SMEE_HANDLE     SMEE_FD
typedef SMEE_UINT32     SMEE_SOCKET
typedef SMEE_HANDLE     SMEE_PID
typedef SMEE_HANDLE     SMEE_SEM_ID
typedef SMEE_INT32      SMEE_DWORD
#elif   TARGET_OS==SUN_OS || TARGET_OS == LINUX_OS
typedef SMEE_INT32      SMEE_TIMER_ID
typedef SMEE_UINT32     SMEE_TID
typedef SMEE_INT32      SMEE_HANDLE
typedef SMEE_INT32      SMEE_FD
typedef SMEE_INT32      SMEE_SOCKET
typedef SMEE_INT32      SMEE_PID
typedef SMEE_INT32      SMEE_SEM_ID
typedef SMEE_INT32      SMEE_DWORD
#elif   TARGET_OS==VXWORKS_OS
typedef SMEE_LPVOID     SMEE_TIMER_ID
typedef SMEE_UINT32     SMEE_TID
typedef SMEE_INT32      SMEE_HANDLE
typedef SMEE_INT32      SMEE_FD
typedef SMEE_INT32      SMEE_SOCKET
typedef SMEE_INT32      SMEE_PID
typedef SMEE_LPVOID     SMEE_SEM_ID
typedef SMEE_INT32      SMEE_DWORD
#if TARGET_OS==WIN_OS
#define SMEE_INVALID_PID        NULL
#define SMEE_INVALID_SEM_ID     (SMEE_SEM_ID)0
#define SMEE_INVALID_SHM_ID     NULL
#define SMEE_INVALLD_TID        NULL
#define SMEE_INVALID_SOCKET     SMEE_UINT32(~0)
#define SMEE_INVALID_TIMER_ID   (SMEE_INT32)(-1)
#define SMEE_INVALID_FD         NULL
#define SMEE_INVALID_HANDLE_VALUE (SMEE_INT32)(-1)
#elif TARGET_OS==SUN_OS || TARGET_OS == LINUX_OS
#define SMEE_INVALID_PID        (SMEE_INT32)(-1)
#define SMEE_INVALID_SEM_ID     (SMEE_INT32)(-1)
#define SMEE_INVALID_SHM_ID     (SMEE_INT32)(-1)
#define SMEE_INVALLD_TID        SMEE_UINT32(~0)
#define SMEE_INVALID_SOCKET     (SMEE_INT32)(-1)
#define SMEE_INVALID_TIMER_ID   (SMEE_INT32)(-1)
#define SMEE_INVALID_FD         (SMEE_INT32)(-1)
#define SMEE_INVALID_HANDLE_VALUE (SMEE_INT32)(-1)
#elif TARGET_OS==VXWORKS_OS
#define SMEE_INVALID_PID        (SMEE_INT32)(-1)
#define SMEE_INVALID_SEM_ID     (SMEE_SEM_ID)0
#define SMEE_INVALID_SHM_ID     (SMEE_INT32)(-1)
#define SMEE_INVALLD_TID        SMEE_UINT32(~0)
#define SMEE_INVALID_SOCKET     (SMEE_INT32)(-1)
#define SMEE_INVALID_TIMER_ID   NULL
#define SMEE_INVALID_FD         (SMEE_INT32)(-1)
#define SMEE_INVALID_HANDLE_VALUE (SMEE_INT32)(-1)
#define SMEE_SOCKET_ERROR ((SMEE_INT32)-1)
#define SMEE_WAIT_FOREVER ((SMEE_INT32)-1)
#define SMEE_MAX_FILE_NAME_SIZE    0x80
头文件名称为：SM4A_tc.h
#ifndef _SM4A_TC_H
#define _SM4A_TC_H
#define SM4A_CONST_BASE					0x534D0000
#define SM4A_DRIVER_END					"End_drv"
#define SM4A_ALL_DRIVERS				"All_drv"
typedef char SM4A_DRIVER_NAME[SM4A_DRIVER_NAME_LENGTH+1]
头文件名称为：TR4A_tc.h
#ifndef		__TR4A_TC_H__
#define		__TR4A_TC_H__
头文件名称为：EC4T_tc.h
#ifndef EC4T_TC_H
#define EC4T_TC_H
#define EC4T_MAX_NR_SUBSTRATE_MARKS     50
#define EC4A_MAPPING_SCAN_NUM               40
